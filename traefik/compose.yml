# Traefik is a http reverse proxy
# 11/03/2025

services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - "no-new-privileges=true"
    networks:
      proxy:
        aliases:
          - "auth.${DOMAIN}"
      authelia: {}
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "8080:8080" # API / Dashboard
    environment:
      - "CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}"
    volumes:
      - ./letsencrypt:/letsencrypt # Where certs will be stored
      - ./config/traefik.yml:/traefik.yml:ro
      - ./config/dynamic.yml:/dynamic.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # So treafik can listen to Docker Events
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`mediamanager.${DOMAIN}`)"
      - "traefik.http.routers.api.entryPoints=websecure"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=authelia@docker"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"

  whoami:
    # Container exposes API which shows IP address
    image: traefik/whoami
    restart: "unless-stopped"
    container_name: "whoami"
    labels:
      - "traefik.enable=true" # Explicitly tell traefik to expose this container
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)" # The domain the service will respond to
      - "traefik.http.routers.whoami.entrypoints=websecure" # Allow request only from the predefined entry point
    networks:
      - proxy

networks:
  proxy:
    external: true
    name: "proxy"
  authelia:
    name: "authelia"
