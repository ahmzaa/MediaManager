name: rtorrent-rutorrent

services:
  rtorrent-rutorrent:
    image: crazymax/rtorrent-rutorrent:latest
    container_name: rtorrent-rutorrent
    networks:
      - proxy
      - wgnet
      - rtorrent-rutorrent
    expose:
      - "${RT_DHT_PORT}/udp"
      - "${XMLRPC_PORT}"
      - "${RUTORRENT_PORT}"
      - "${WEBDAV_PORT}"
      - "${RT_INC_PORT}"
    ports:
      - target: ${RT_DHT_PORT}
        published: ${RT_DHT_PORT}
        protocol: udp
      - target: ${RT_INC_PORT}
        published: ${RT_INC_PORT}
        protocol: tcp
    env_file:
      - "rtorrent-rutorrent.env"
      - ".env"
    volumes:
      - "./data:/data"
      - "/mnt/media/Downloads:/downloads"
      - "./passwd:/passwd"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.rutorrent.rule=Host(`rutorrent.${DOMAIN}`)'
      - 'traefik.http.routers.rutorrent.entryPoints=websecure'
      - 'traefik.http.routers.rutorrent.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.rutorrent.middlewares=authelia@docker'
      - 'traefik.http.services.rutorrent.loadbalancer.server.port=${RUTORRENT_PORT}'
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    restart: always

  rtorrent-logs:
    image: bash
    container_name: rtorrent-rutorrent-logs
    command: bash -c 'tail -f /log/*.log'
    network_mode: none
    depends_on:
      - rtorrent-rutorrent
    volumes:
      - "./data/rtorrent/log:/log"
    restart: always

networks:
  proxy:
    external: true
  wgnet:
    external: true
  rtorrent-rutorrent:
    name: rtorrent-rutorrent
